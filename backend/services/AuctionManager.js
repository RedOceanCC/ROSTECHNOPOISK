const RentalRequest = require('../models/RentalRequest');
const NotificationService = require('./NotificationService');
const logger = require('../utils/logger');

class AuctionManager {
  constructor() {
    this.isRunning = false;
    this.checkInterval = 2000; // –ü—Ä–æ–≤–µ—Ä—è—Ç—å –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –¥–µ–º–æ-–∞—É–∫—Ü–∏–æ–Ω–æ–≤
    this.intervalId = null;
  }

  // –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∞—É–∫—Ü–∏–æ–Ω–æ–≤
  start() {
    if (this.isRunning) {
      logger.warn('AuctionManager —É–∂–µ –∑–∞–ø—É—â–µ–Ω');
      return;
    }

    this.isRunning = true;
    logger.info('üöÄ –ó–∞–ø—É—Å–∫ AuctionManager –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è –∞—É–∫—Ü–∏–æ–Ω–æ–≤');
    
    // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    this.checkExpiredAuctions();
    
    // –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
    this.intervalId = setInterval(() => {
      this.checkExpiredAuctions();
    }, this.checkInterval);
  }

  // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
  stop() {
    if (!this.isRunning) {
      return;
    }

    this.isRunning = false;
    if (this.intervalId) {
      clearInterval(this.intervalId);
      this.intervalId = null;
    }
    
    logger.info('‚èπÔ∏è AuctionManager –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∑–∞–∫—Ä—ã—Ç–∏–µ –∏—Å—Ç–µ–∫—à–∏—Ö –∞—É–∫—Ü–∏–æ–Ω–æ–≤
  async checkExpiredAuctions() {
    try {
      logger.info('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö –∞—É–∫—Ü–∏–æ–Ω–æ–≤...');
      
      const expiredAuctions = await RentalRequest.findExpiredAuctions();
      
      if (expiredAuctions.length === 0) {
        logger.info('‚úÖ –ò—Å—Ç–µ–∫—à–∏—Ö –∞—É–∫—Ü–∏–æ–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
        return;
      }

      logger.info(`‚è∞ –ù–∞–π–¥–µ–Ω–æ ${expiredAuctions.length} –∏—Å—Ç–µ–∫—à–∏—Ö –∞—É–∫—Ü–∏–æ–Ω–æ–≤`);

      for (const auction of expiredAuctions) {
        try {
          await this.closeAuction(auction);
        } catch (error) {
          logger.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –∞—É–∫—Ü–∏–æ–Ω–∞ ${auction.id}:`, error);
        }
      }

    } catch (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏—Å—Ç–µ–∫—à–∏—Ö –∞—É–∫—Ü–∏–æ–Ω–æ–≤:', error);
    }
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞—É–∫—Ü–∏–æ–Ω–∞
  async closeAuction(auction) {
    logger.info(`üîê –ó–∞–∫—Ä—ã—Ç–∏–µ –∞—É–∫—Ü–∏–æ–Ω–∞ ${auction.id}: ${auction.equipment_type} ${auction.equipment_subtype}`);

    try {
      const result = await RentalRequest.closeAuction(auction.id);
      
      if (result.winner) {
        logger.info(`üèÜ –ê—É–∫—Ü–∏–æ–Ω ${auction.id} –∑–∞–∫—Ä—ã—Ç. –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: ${result.winner.owner_name}, —Ü–µ–Ω–∞: ${result.winner.total_price}‚ÇΩ`);
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
        try {
          await NotificationService.notifyAuctionClosed(
            auction.manager_id,
            {
              equipment_type: auction.equipment_type,
              equipment_subtype: auction.equipment_subtype
            },
            {
              name: result.winner.owner_name,
              price: result.winner.total_price
            }
          );
        } catch (notificationError) {
          logger.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫—Ä—ã—Ç–∏–∏ –∞—É–∫—Ü–∏–æ–Ω–∞:', notificationError);
        }

        // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
        try {
          await NotificationService.sendNotification(result.winner.owner_id, {
            type: 'bid_won',
            title: 'üéâ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –∞—É–∫—Ü–∏–æ–Ω!',
            message: `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–∞ ${auction.equipment_type} - ${auction.equipment_subtype} –≤—ã–∏–≥—Ä–∞–ª–∞. –°—Ç–æ–∏–º–æ—Å—Ç—å: ${result.winner.total_price}‚ÇΩ. –û–∂–∏–¥–∞–π—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞.`
          });
        } catch (notificationError) {
          logger.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—é:', notificationError);
        }

        // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏—Ö
        for (const bid of result.bids) {
          if (bid.id !== result.winner.id) {
            try {
              await NotificationService.sendNotification(bid.owner_id, {
                type: 'bid_lost',
                title: 'üìâ –ê—É–∫—Ü–∏–æ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω',
                message: `–ê—É–∫—Ü–∏–æ–Ω –Ω–∞ ${auction.equipment_type} - ${auction.equipment_subtype} –∑–∞–≤–µ—Ä—à–µ–Ω. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ!`
              });
            } catch (notificationError) {
              logger.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–æ–∏–≥—Ä–∞–≤—à–µ–º—É ${bid.owner_id}:`, notificationError);
            }
          }
        }

      } else {
        logger.info(`üì≠ –ê—É–∫—Ü–∏–æ–Ω ${auction.id} –∑–∞–∫—Ä—ã—Ç –±–µ–∑ —Å—Ç–∞–≤–æ–∫`);
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å—Ç–∞–≤–æ–∫
        try {
          await NotificationService.sendNotification(auction.manager_id, {
            type: 'auction_no_bids',
            title: 'üì≠ –ê—É–∫—Ü–∏–æ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω –±–µ–∑ —Å—Ç–∞–≤–æ–∫',
            message: `–ê—É–∫—Ü–∏–æ–Ω –Ω–∞ ${auction.equipment_type} - ${auction.equipment_subtype} –∑–∞–≤–µ—Ä—à–µ–Ω. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å—Ç–∞–≤–æ–∫ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–æ.`
          });
        } catch (notificationError) {
          logger.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å—Ç–∞–≤–æ–∫:', notificationError);
        }
      }

      return result;

    } catch (error) {
      logger.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –∞—É–∫—Ü–∏–æ–Ω–∞ ${auction.id}:`, error);
      throw error;
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  getStats() {
    return {
      isRunning: this.isRunning,
      checkInterval: this.checkInterval,
      nextCheck: this.intervalId ? Date.now() + this.checkInterval : null
    };
  }
}

// –°–æ–∑–¥–∞–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
const auctionManager = new AuctionManager();

module.exports = auctionManager;
