const Equipment = require('./models/Equipment'); const Company = require('./models/Company'); const db = require('./models/Database'); async function testPartnerships() { await db.connect(); console.log('üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–ê–†–¢–ù–ï–†–°–¢–í –ò –§–ò–õ–¨–¢–†–ê–¶–ò–ò'); const managerId = 4; console.log('\\n–ú–µ–Ω–µ–¥–∂–µ—Ä:', managerId, '(–°–∏–¥–æ—Ä–æ–≤ –°–∏–¥–æ—Ä –°–∏–¥–æ—Ä–æ–≤–∏—á)'); const user = await db.get('SELECT u.*, c.name as company_name FROM users u JOIN companies c ON u.company_id = c.id WHERE u.id = ?', [managerId]); console.log('–ö–æ–º–ø–∞–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞:', user.company_name, '(ID:', user.company_id + ')'); console.log('\\nüìã –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞:'); const partners = await Company.getPartnerCompaniesForManager(user.company_id); partners.forEach(p => console.log('- ' + p.name + ' (ID: ' + p.id + ')')); console.log('\\nüîß –í–ª–∞–¥–µ–ª—å—Ü—ã –≤ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏—Ö –∫–æ–º–ø–∞–Ω–∏—è—Ö:'); const owners = await db.all('SELECT u.*, c.name as company_name FROM users u JOIN companies c ON u.company_id = c.id JOIN company_partnerships cp ON c.id = cp.owner_company_id WHERE cp.manager_company_id = ? AND u.role = \
owner\ AND cp.status = \active\', [user.company_id]); owners.forEach(o => console.log('- ' + o.name + ' (' + o.company_name + ')')); console.log('\\nüöú –¢–µ—Ö–Ω–∏–∫–∞ –æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤:'); const equipment = await Equipment.findAvailableForManagerAll(managerId); console.log('–í—Å–µ–≥–æ –µ–¥–∏–Ω–∏—Ü:', equipment.length); equipment.slice(0,5).forEach(e => console.log('- ' + e.name + ' –æ—Ç ' + e.owner_name + ' (' + e.company_name + ')')); console.log('\\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!'); await db.close(); } testPartnerships().catch(console.error);
