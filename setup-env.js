#!/usr/bin/env node
/**
 * –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è - –†–û–°–¢–ï–•–ù–û–ü–û–ò–°–ö
 * –ö–æ–ø–∏—Ä—É–µ—Ç —à–∞–±–ª–æ–Ω—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∫–ª—é—á–∏
 */

const fs = require('fs');
const path = require('path');
const crypto = require('crypto');

console.log('üîß –ù–ê–°–¢–†–û–ô–ö–ê –û–ö–†–£–ñ–ï–ù–ò–Ø - –†–û–°–¢–ï–•–ù–û–ü–û–ò–°–ö\n');

// –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const args = process.argv.slice(2);
const envFlag = args.find(arg => arg.startsWith('--env='));
const environment = envFlag ? envFlag.split('=')[1] : 'local';

console.log(`üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è: ${environment}`);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞
const templatePath = path.join('config-templates', `env.${environment}.template`);
if (!fs.existsSync(templatePath)) {
  console.error(`‚ùå –®–∞–±–ª–æ–Ω –¥–ª—è –æ–∫—Ä—É–∂–µ–Ω–∏—è "${environment}" –Ω–µ –Ω–∞–π–¥–µ–Ω: ${templatePath}`);
  console.error('–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: local, development, production');
  process.exit(1);
}

// –ß–∏—Ç–∞–µ–º —à–∞–±–ª–æ–Ω
let envContent = fs.readFileSync(templatePath, 'utf8');
console.log(`‚úÖ –®–∞–±–ª–æ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω: ${templatePath}`);

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π SESSION_SECRET –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
if (environment === 'production') {
  const sessionSecret = crypto.randomBytes(32).toString('hex');
  envContent = envContent.replace(
    'SESSION_SECRET=CHANGE_THIS_TO_RANDOM_STRING_IN_PRODUCTION_64_CHARS_MINIMUM',
    `SESSION_SECRET=${sessionSecret}`
  );
  console.log('üîê –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –±–µ–∑–æ–ø–∞—Å–Ω—ã–π SESSION_SECRET');
}

// –°–æ–∑–¥–∞–µ–º —Ü–µ–ª–µ–≤–æ–π —Ñ–∞–π–ª
const targetPath = `.env.${environment}`;
fs.writeFileSync(targetPath, envContent);
console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${targetPath}`);

// –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥–∏, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
const createDirectories = [
  'backend/logs',
  'backend/database'
];

if (environment === 'production') {
  createDirectories.push(
    '/var/lib/rostechnopoisk/database',
    '/var/log/rostechnopoisk',
    '/var/backups/rostechnopoisk'
  );
}

console.log('\nüìÅ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–∞—Ç–∞–ª–æ–≥–æ–≤...');
createDirectories.forEach(dir => {
  try {
    if (!fs.existsSync(dir)) {
      fs.mkdirSync(dir, { recursive: true });
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –∫–∞—Ç–∞–ª–æ–≥: ${dir}`);
    } else {
      console.log(`‚ÑπÔ∏è  –ö–∞—Ç–∞–ª–æ–≥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${dir}`);
    }
  } catch (error) {
    console.log(`‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ ${dir}: ${error.message}`);
    if (environment === 'production') {
      console.log(`   –í–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ sudo –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è ${dir}`);
    }
  }
});

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
if (environment === 'production') {
  console.log('\nüîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞...');
  
  const { spawn } = require('child_process');
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  try {
    fs.chmodSync(targetPath, 0o600); // –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å/–ø–∏—Å–∞—Ç—å
    console.log(`‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∞ 600 –¥–ª—è ${targetPath}`);
  } catch (error) {
    console.log(`‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–ª—è ${targetPath}: ${error.message}`);
  }
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
console.log(`\nüéâ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!\n`);
console.log(`üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:`);
console.log(`   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª–µ: ${targetPath}`);

if (environment === 'production') {
  console.log(`   2. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–º–µ–Ω—ã –≤ CORS_ORIGINS`);
  console.log(`   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∫–∞—Ç–∞–ª–æ–≥–∏ –¥–ª—è –ë–î –∏ –ª–æ–≥–æ–≤`);
  console.log(`   4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Nginx –∏ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã`);
  console.log(`   5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: npm run migrate`);
} else {
  console.log(`   2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm install`);
  console.log(`   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: npm run dev`);
}

console.log(`\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:`);
console.log(`   node -e "require('dotenv').config({path: '${targetPath}'}); console.log('NODE_ENV:', process.env.NODE_ENV, 'PORT:', process.env.PORT)"`);

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ (–∫—Ä–æ–º–µ —Å–µ–∫—Ä–µ—Ç–æ–≤)
console.log(`\nüìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ${targetPath}:`);
console.log('=' .repeat(50));
const lines = envContent.split('\n');
lines.forEach(line => {
  if (line.includes('SESSION_SECRET') && environment === 'production') {
    console.log('SESSION_SECRET=***–°–ö–†–´–¢–û***');
  } else {
    console.log(line);
  }
});
console.log('=' .repeat(50));

console.log(`\n‚ú® –ì–æ—Ç–æ–≤–æ! –û–∫—Ä—É–∂–µ–Ω–∏–µ "${environment}" –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ.`);

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
module.exports = {
  setupEnvironment: (env) => {
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    return new Promise((resolve, reject) => {
      try {
        // –õ–æ–≥–∏–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        resolve(`–û–∫—Ä—É–∂–µ–Ω–∏–µ ${env} –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ`);
      } catch (error) {
        reject(error);
      }
    });
  }
};
